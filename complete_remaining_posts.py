#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script ƒë·ªÉ ho√†n th√†nh import 20 b√†i c√≤n l·∫°i v√†o Google Sheets
V·ªõi c∆° ch·∫ø delay v√† retry ƒë·ªÉ tr√°nh rate limit
"""

import json
import gspread
import time
import re
from datetime import datetime
from google.oauth2.service_account import Credentials

def setup_google_sheets():
    """Thi·∫øt l·∫≠p k·∫øt n·ªëi Google Sheets"""
    try:
        # ƒê·ªçc credentials t·ª´ file JSON
        creds = Credentials.from_service_account_file(
            'strong-augury-467706-b4-fa91bb781d0a.json',
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_key('1JNeybKkC9nRUXWgX6yIdhSv8roiweal2VESQtwfLHc0')
        
        return spreadsheet
    except Exception as e:
        print(f"L·ªói khi thi·∫øt l·∫≠p Google Sheets: {e}")
        return None

def clean_html_content(html_content):
    """L√†m s·∫°ch n·ªôi dung HTML"""
    if not html_content:
        return ""
    
    # Lo·∫°i b·ªè c√°c th·∫ª HTML
    clean_text = re.sub(r'<[^>]+>', '', html_content)
    # Lo·∫°i b·ªè kho·∫£ng tr·∫Øng th·ª´a
    clean_text = re.sub(r'\s+', ' ', clean_text).strip()
    # Gi·ªõi h·∫°n ƒë·ªô d√†i ƒë·ªÉ tr√°nh l·ªói Google Sheets
    if len(clean_text) > 5000:
        clean_text = clean_text[:5000] + "..."
    
    return clean_text

def extract_keywords_from_content(content, title=""):
    """Tr√≠ch xu·∫•t keywords t·ª´ n·ªôi dung"""
    if not content and not title:
        return ""
    
    text = f"{title} {content}".lower()
    
    # Keywords li√™n quan ƒë·∫øn casino/bonus
    casino_keywords = [
        'casino', 'bonus', 'free spins', 'jackpot', 'slot', 'poker', 
        'blackjack', 'roulette', 'baccarat', 'gaming', 'bet', 'win',
        'deposit', 'withdraw', 'promotion', 'offer', 'deal'
    ]
    
    found_keywords = [kw for kw in casino_keywords if kw in text]
    return ", ".join(found_keywords[:5])  # Gi·ªõi h·∫°n 5 keywords

def get_existing_titles(worksheet):
    """L·∫•y danh s√°ch titles ƒë√£ c√≥ trong sheet ƒë·ªÉ tr√°nh tr√πng l·∫∑p"""
    try:
        # L·∫•y t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ c·ªôt Title (c·ªôt C)
        titles = worksheet.col_values(3)  # C·ªôt 3 l√† Title
        # B·ªè qua header
        return titles[1:] if len(titles) > 1 else []
    except Exception as e:
        print(f"L·ªói khi l·∫•y danh s√°ch titles: {e}")
        return []

def import_remaining_posts():
    """Import 20 b√†i c√≤n l·∫°i v·ªõi delay ƒë·ªÉ tr√°nh rate limit"""
    
    # ƒê·ªçc d·ªØ li·ªáu JSON
    try:
        with open('bonus365casinoall_posts.json', 'r', encoding='utf-8') as f:
            posts = json.load(f)
        
        # File n√†y l√† m·ªôt m·∫£ng tr·ª±c ti·∫øp, kh√¥ng c√≥ key 'posts'
        if not isinstance(posts, list):
            print("File JSON kh√¥ng ph·∫£i l√† m·∫£ng posts")
            return
            
        print(f"T·ªïng s·ªë b√†i posts: {len(posts)}")
        
    except FileNotFoundError:
        print("Kh√¥ng t√¨m th·∫•y file bonus365casinoall_posts.json")
        return
    except json.JSONDecodeError as e:
        print(f"L·ªói ƒë·ªçc file JSON: {e}")
        return

    # Thi·∫øt l·∫≠p Google Sheets
    spreadsheet = setup_google_sheets()
    if not spreadsheet:
        return
    
    # L·∫•y worksheet "Bonus365casinoall"
    try:
        worksheet = spreadsheet.worksheet("Bonus365casinoall")
        print("ƒê√£ t√¨m th·∫•y sheet 'Bonus365casinoall'")
    except gspread.WorksheetNotFound:
        print("Kh√¥ng t√¨m th·∫•y sheet 'Bonus365casinoall'")
        return
    
    # L·∫•y danh s√°ch titles ƒë√£ c√≥
    existing_titles = get_existing_titles(worksheet)
    print(f"ƒê√£ c√≥ {len(existing_titles)} b√†i trong sheet")
    
    # T√¨m c√°c b√†i ch∆∞a ƒë∆∞·ª£c import
    remaining_posts = []
    for post in posts:
        title = post.get('title', '').strip()  # title l√† string tr·ª±c ti·∫øp
        if title and title not in existing_titles:
            remaining_posts.append(post)
    
    print(f"S·ªë b√†i c√≤n l·∫°i c·∫ßn import: {len(remaining_posts)}")
    
    if not remaining_posts:
        print("T·∫•t c·∫£ b√†i ƒë√£ ƒë∆∞·ª£c import!")
        return
    
    # Import t·ª´ng b√†i v·ªõi delay
    imported_count = 0
    total_remaining = len(remaining_posts)
    
    for i, post in enumerate(remaining_posts, 1):
        try:
            print(f"\n[{i}/{total_remaining}] ƒêang import b√†i: {post.get('title', 'No title')[:50]}...")
            
            # Chu·∫©n b·ªã d·ªØ li·ªáu - c·∫•u tr√∫c JSON ƒë∆°n gi·∫£n
            title = post.get('title', '')
            content = post.get('content', '')
            clean_content = clean_html_content(content)
            
            # L·∫•y URL ·∫£nh featured
            featured_image_url = post.get('featured_image', '')
            
            # T·∫°o d·ªØ li·ªáu row
            row_data = [
                'Bonus365casinoall',  # Source_Title
                'completed',          # Status
                title,               # Title
                clean_content,       # Content
                post.get('link', ''), # Original_URL
                featured_image_url,   # Image_URL
                title,               # Meta_Title
                clean_content[:160] + "..." if len(clean_content) > 160 else clean_content,  # Meta_Desc
                datetime.now().strftime('%Y-%m-%d %H:%M:%S'),  # Import_Date
                extract_keywords_from_content(clean_content, title),  # Keywords
                'Casino',            # Category
                'bonus, casino',     # Tags
                'AI Import',         # Author
                'Imported from bonus365casinoall_posts.json',  # Notes
                ''                   # Custom_Field
            ]
            
            # Th√™m v√†o sheet v·ªõi retry mechanism
            retry_count = 0
            max_retries = 3
            
            while retry_count < max_retries:
                try:
                    worksheet.append_row(row_data)
                    imported_count += 1
                    print(f"‚úì ƒê√£ import th√†nh c√¥ng b√†i {i}/{total_remaining}")
                    break
                    
                except Exception as e:
                    retry_count += 1
                    if "quota" in str(e).lower() or "429" in str(e):
                        print(f"‚ö†Ô∏è Rate limit detected, waiting 10 seconds... (retry {retry_count}/{max_retries})")
                        time.sleep(10)
                    else:
                        print(f"‚ùå L·ªói import b√†i {i}: {e}")
                        if retry_count < max_retries:
                            print(f"Th·ª≠ l·∫°i sau 5 gi√¢y... (retry {retry_count}/{max_retries})")
                            time.sleep(5)
                        else:
                            print(f"B·ªè qua b√†i n√†y sau {max_retries} l·∫ßn th·ª≠")
                            break
            
            # Delay gi·ªØa c√°c b√†i ƒë·ªÉ tr√°nh rate limit
            if i < total_remaining:  # Kh√¥ng delay sau b√†i cu·ªëi
                print(f"Ch·ªù 5 gi√¢y tr∆∞·ªõc khi import b√†i ti·∫øp theo...")
                time.sleep(5)
                
        except KeyboardInterrupt:
            print(f"\n‚ö†Ô∏è Ng∆∞·ªùi d√πng d·ª´ng qu√° tr√¨nh. ƒê√£ import {imported_count}/{total_remaining} b√†i.")
            break
        except Exception as e:
            print(f"‚ùå L·ªói kh√¥ng mong mu·ªën khi x·ª≠ l√Ω b√†i {i}: {e}")
            continue
    
    print(f"\nüéâ Ho√†n th√†nh! ƒê√£ import th√™m {imported_count}/{total_remaining} b√†i c√≤n l·∫°i.")
    print(f"T·ªïng s·ªë b√†i trong sheet hi·ªán t·∫°i: {len(existing_titles) + imported_count}")

if __name__ == "__main__":
    print("=== SCRIPT HO√ÄN TH√ÄNH IMPORT D·ªÆ LI·ªÜU ===")
    print("B·∫Øt ƒë·∫ßu import 20 b√†i c√≤n l·∫°i...")
    import_remaining_posts()
    print("Script ho√†n th√†nh!")
