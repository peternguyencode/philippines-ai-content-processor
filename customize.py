#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
INTERACTIVE CUSTOMIZATION TOOL
C√¥ng c·ª• t∆∞∆°ng t√°c ƒë·ªÉ ch·ªânh s·ª≠a h·ªá th·ªëng WordPress Automation
"""

import os
import shutil
from datetime import datetime

def backup_file(filepath):
    """Backup file tr∆∞·ªõc khi ch·ªânh s·ª≠a"""
    if os.path.exists(filepath):
        backup_path = f"{filepath}.backup.{datetime.now().strftime('%Y%m%d_%H%M%S')}"
        shutil.copy2(filepath, backup_path)
        print(f"‚úÖ ƒê√£ backup: {backup_path}")
        return backup_path
    return None

def show_current_config():
    """Hi·ªÉn th·ªã c·∫•u h√¨nh hi·ªán t·∫°i"""
    print("\nüîß C·∫§U H√åNH HI·ªÜN T·∫†I:")
    print("=" * 50)
    
    try:
        from dotenv import load_dotenv
        import os
        load_dotenv()
        
        configs = {
            "AI Provider": os.getenv('DEFAULT_AI_PROVIDER', 'openai'),
            "Max Content Length": os.getenv('MAX_CONTENT_LENGTH', '2000'),
            "Concurrent Requests": os.getenv('CONCURRENT_REQUESTS', '3'),
            "Request Delay": os.getenv('REQUEST_DELAY', '2'),
            "Batch Size": os.getenv('BATCH_SIZE', '5')
        }
        
        for key, value in configs.items():
            print(f"üìä {key}: {value}")
            
    except Exception as e:
        print(f"‚ùå L·ªói ƒë·ªçc config: {e}")

def customize_ai_settings():
    """T√πy ch·ªânh c√†i ƒë·∫∑t AI"""
    print("\nü§ñ T√ôY CH·ªàNH AI SETTINGS")
    print("=" * 40)
    
    # ƒê·ªçc c·∫•u h√¨nh hi·ªán t·∫°i
    from dotenv import load_dotenv
    load_dotenv()
    
    current_provider = os.getenv('DEFAULT_AI_PROVIDER', 'openai')
    current_length = os.getenv('MAX_CONTENT_LENGTH', '2000')
    
    print(f"Hi·ªán t·∫°i - Provider: {current_provider}, Max Length: {current_length}")
    
    # T√πy ch·ªçn
    print("\n1. Chuy·ªÉn sang Gemini Pro (mi·ªÖn ph√≠ h∆°n)")
    print("2. Chuy·ªÉn sang OpenAI GPT (ch·∫•t l∆∞·ª£ng cao)")
    print("3. Thay ƒë·ªïi ƒë·ªô d√†i content")
    print("4. T√πy ch·ªânh prompt template")
    print("0. Quay l·∫°i")
    
    choice = input("\nCh·ªçn t√πy ch·ªçn: ").strip()
    
    if choice == "1":
        update_env_var("DEFAULT_AI_PROVIDER", "gemini")
        print("‚úÖ ƒê√£ chuy·ªÉn sang Gemini Pro")
    elif choice == "2":
        update_env_var("DEFAULT_AI_PROVIDER", "openai")
        print("‚úÖ ƒê√£ chuy·ªÉn sang OpenAI GPT")
    elif choice == "3":
        new_length = input(f"Nh·∫≠p ƒë·ªô d√†i m·ªõi (hi·ªán t·∫°i: {current_length}): ").strip()
        if new_length.isdigit():
            update_env_var("MAX_CONTENT_LENGTH", new_length)
            print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t ƒë·ªô d√†i: {new_length}")
    elif choice == "4":
        customize_prompt_template()

def customize_performance():
    """T√πy ch·ªânh hi·ªáu su·∫•t"""
    print("\n‚ö° T√ôY CH·ªàNH HI·ªÜU SU·∫§T")
    print("=" * 40)
    
    from dotenv import load_dotenv
    load_dotenv()
    
    current_concurrent = os.getenv('CONCURRENT_REQUESTS', '3')
    current_delay = os.getenv('REQUEST_DELAY', '2')
    
    print(f"Hi·ªán t·∫°i - Concurrent: {current_concurrent}, Delay: {current_delay}s")
    
    print("\n1. TƒÉng t·ªëc ƒë·ªô (r·ªßi ro rate limit)")
    print("2. Gi·∫£m t·∫£i h·ªá th·ªëng (ch·∫≠m nh∆∞ng ·ªïn ƒë·ªãnh)")
    print("3. T√πy ch·ªânh chi ti·∫øt")
    print("0. Quay l·∫°i")
    
    choice = input("\nCh·ªçn t√πy ch·ªçn: ").strip()
    
    if choice == "1":
        update_env_var("CONCURRENT_REQUESTS", "5")
        update_env_var("REQUEST_DELAY", "1")
        print("‚úÖ ƒê√£ tƒÉng t·ªëc ƒë·ªô: 5 concurrent, 1s delay")
    elif choice == "2":
        update_env_var("CONCURRENT_REQUESTS", "1")
        update_env_var("REQUEST_DELAY", "5")
        print("‚úÖ ƒê√£ gi·∫£m t·∫£i: 1 concurrent, 5s delay")
    elif choice == "3":
        concurrent = input(f"Concurrent requests (1-10, hi·ªán t·∫°i {current_concurrent}): ").strip()
        delay = input(f"Request delay gi√¢y (1-10, hi·ªán t·∫°i {current_delay}): ").strip()
        
        if concurrent.isdigit() and 1 <= int(concurrent) <= 10:
            update_env_var("CONCURRENT_REQUESTS", concurrent)
        if delay.isdigit() and 1 <= int(delay) <= 10:
            update_env_var("REQUEST_DELAY", delay)
        print("‚úÖ ƒê√£ c·∫≠p nh·∫≠t c√†i ƒë·∫∑t hi·ªáu su·∫•t")

def customize_wordpress():
    """T√πy ch·ªânh WordPress settings"""
    print("\nüì§ T√ôY CH·ªàNH WORDPRESS")
    print("=" * 40)
    
    print("1. Thay ƒë·ªïi default post status (draft/publish)")
    print("2. T√πy ch·ªânh categories & tags")
    print("3. C√†i ƒë·∫∑t SEO meta")
    print("4. Ki·ªÉm tra k·∫øt n·ªëi WordPress")
    print("0. Quay l·∫°i")
    
    choice = input("\nCh·ªçn t√πy ch·ªçn: ").strip()
    
    if choice == "1":
        print("\nDefault post status:")
        print("- draft: L∆∞u nh√°p (an to√†n)")
        print("- publish: ƒêƒÉng lu√¥n (t·ª± ƒë·ªông)")
        status = input("Ch·ªçn (draft/publish): ").strip().lower()
        if status in ['draft', 'publish']:
            # C·∫≠p nh·∫≠t trong wp_helper.py
            print(f"‚úÖ S·∫Ω ƒë·∫∑t default status: {status}")
            print("üí° C·∫ßn ch·ªânh s·ª≠a th·ªß c√¥ng trong wp_helper.py")
    elif choice == "4":
        test_wordpress_connection()

def customize_prompt_template():
    """T√πy ch·ªânh prompt template"""
    print("\nüìù T√ôY CH·ªàNH PROMPT TEMPLATE")
    print("=" * 40)
    
    backup_file("ai_helper.py")
    
    print("C√°c template c√≥ s·∫µn:")
    print("1. Blog c√° nh√¢n (tone th√¢n thi·ªán)")
    print("2. Business formal (tone chuy√™n nghi·ªáp)")
    print("3. Technical review (tone chuy√™n s√¢u)")
    print("4. News article (tone kh√°ch quan)")
    print("5. T√πy ch·ªânh th·ªß c√¥ng")
    
    choice = input("\nCh·ªçn template: ").strip()
    
    templates = {
        "1": "B·∫°n l√† m·ªôt blogger c√° nh√¢n, vi·∫øt tone th√¢n thi·ªán, g·∫ßn g≈©i v·ªõi ng∆∞·ªùi ƒë·ªçc.",
        "2": "B·∫°n l√† m·ªôt chuy√™n gia business, vi·∫øt tone chuy√™n nghi·ªáp, formal.",
        "3": "B·∫°n l√† m·ªôt technical reviewer, vi·∫øt chi ti·∫øt, chuy√™n s√¢u v·ªÅ k·ªπ thu·∫≠t.",
        "4": "B·∫°n l√† m·ªôt nh√† b√°o, vi·∫øt kh√°ch quan, cung c·∫•p th√¥ng tin ch√≠nh x√°c."
    }
    
    if choice in templates:
        print(f"‚úÖ ƒê√£ ch·ªçn template: {templates[choice]}")
        print("üí° C·∫ßn c·∫≠p nh·∫≠t th·ªß c√¥ng trong ai_helper.py, d√≤ng 79")
    elif choice == "5":
        custom_prompt = input("Nh·∫≠p system message t√πy ch·ªânh: ")
        print(f"‚úÖ Custom prompt: {custom_prompt}")
        print("üí° C·∫ßn c·∫≠p nh·∫≠t th·ªß c√¥ng trong ai_helper.py")

def test_wordpress_connection():
    """Test k·∫øt n·ªëi WordPress"""
    print("\nüîç KI·ªÇM TRA WORDPRESS...")
    
    try:
        from wp_helper import WPHelper
        wp = WPHelper()
        print("‚úÖ K·∫øt n·ªëi WordPress th√†nh c√¥ng!")
        
        # Test t·∫°o b√†i draft
        test_title = f"Test Connection - {datetime.now().strftime('%H:%M:%S')}"
        test_content = "<p>ƒê√¢y l√† b√†i test k·∫øt n·ªëi. C√≥ th·ªÉ x√≥a.</p>"
        
        result = wp.create_post(test_title, test_content, 'draft')
        if result:
            print(f"‚úÖ Test t·∫°o b√†i th√†nh c√¥ng: {result['link']}")
        else:
            print("‚ùå Kh√¥ng th·ªÉ t·∫°o b√†i test")
            
    except Exception as e:
        print(f"‚ùå L·ªói WordPress: {e}")

def update_env_var(key, value):
    """C·∫≠p nh·∫≠t bi·∫øn m√¥i tr∆∞·ªùng trong file .env"""
    try:
        # Backup .env
        backup_file(".env")
        
        # ƒê·ªçc file .env
        with open(".env", "r", encoding="utf-8") as f:
            lines = f.readlines()
        
        # T√¨m v√† c·∫≠p nh·∫≠t
        updated = False
        for i, line in enumerate(lines):
            if line.startswith(f"{key}="):
                lines[i] = f"{key}={value}\n"
                updated = True
                break
        
        # N·∫øu kh√¥ng t√¨m th·∫•y, th√™m m·ªõi
        if not updated:
            lines.append(f"{key}={value}\n")
        
        # Ghi l·∫°i file
        with open(".env", "w", encoding="utf-8") as f:
            f.writelines(lines)
        
        print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t {key}={value}")
        
    except Exception as e:
        print(f"‚ùå L·ªói c·∫≠p nh·∫≠t .env: {e}")

def run_quick_test():
    """Ch·∫°y test nhanh sau khi ch·ªânh s·ª≠a"""
    print("\nüß™ CH·∫†Y TEST NHANH...")
    
    try:
        os.system("python workflow_checker.py")
    except Exception as e:
        print(f"‚ùå L·ªói test: {e}")

def main():
    """Main interactive menu"""
    while True:
        print("\nüéõÔ∏è WORDPRESS AUTOMATION - CUSTOMIZATION TOOL")
        print("=" * 60)
        
        show_current_config()
        
        print("\nüìã T√ôY CH·ªàNH:")
        print("1. ü§ñ AI Settings (Provider, Content Length, Prompt)")
        print("2. ‚ö° Performance (Concurrent, Delay, Batch Size)")
        print("3. üì§ WordPress (Post Status, Categories, SEO)")
        print("4. üìä Google Sheets (Column Mapping)")
        print("5. üß™ Ch·∫°y test sau ch·ªânh s·ª≠a")
        print("6. üìñ Xem h∆∞·ªõng d·∫´n chi ti·∫øt")
        print("0. Tho√°t")
        
        choice = input("\nüëâ Ch·ªçn t√πy ch·ªçn (0-6): ").strip()
        
        if choice == '0':
            print("üëã T·∫°m bi·ªát!")
            break
        elif choice == '1':
            customize_ai_settings()
        elif choice == '2':
            customize_performance()
        elif choice == '3':
            customize_wordpress()
        elif choice == '4':
            print("üí° Xem file CUSTOMIZATION_GUIDE.md ƒë·ªÉ bi·∫øt chi ti·∫øt")
        elif choice == '5':
            run_quick_test()
        elif choice == '6':
            print("üìñ Xem file CUSTOMIZATION_GUIDE.md ƒë·ªÉ c√≥ h∆∞·ªõng d·∫´n ƒë·∫ßy ƒë·ªß")
        else:
            print("‚ùå T√πy ch·ªçn kh√¥ng h·ª£p l·ªá!")

if __name__ == "__main__":
    main()
